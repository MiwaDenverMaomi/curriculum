1.データベース文字コード設定について
MariaDB [checktest4]> show variables like "chara%";
+--------------------------+---------------------------------+
| Variable_name            | Value                           |
+--------------------------+---------------------------------+
| character_set_client     | cp932                           |
| character_set_connection | cp932                           |
| character_set_database   | utf8mb4                         |
| character_set_filesystem | binary                          |
| character_set_results    | cp932                           |
| character_set_server     | utf8mb4                         |
| character_set_system     | utf8                            |
| character_sets_dir       | C:\xampp8\mysql\share\charsets\ |
+--------------------------+---------------------------------+
windowsだとこいつらがデフォルトでcp932になってしまっている。

★character_set_client...クライアント側で発行したsqlはこの文字コードになる。
->localhostがホスト、クライアントが私のPCだと思う。ホスト側がsqlを発行するなら
わかるが、クライアント側が発行するとはどういうことか？
ー＞例えばログイン画面でユーザ名とパスワードを入力した際、それが送信され、そのクエリが発行される。
それが「クライアント側が発行する」ということ。その発行の際の文字コードがここで設定できる。

★character_set_connection...クライアント側（つまり私のＰＣ）から発行した文字を
ホスト側(localhost)でこの文字コードに変換するということ？
ー＞ＭｙＳＱＬサーバーにクエリが送信されたとき、ここで指定された文字コードに基づき変換される。

★character_set_results...クライアントに送信する検索結果はこの文字コードになる。
localhostが私のＰＣに検索結果を送信するとき、この文字コードを使用？
->その通り。

★character_set_database...現在参照しているＤＢの文字コード？　
->use database;してるときの文字コード。
★character_set_server...ＤＢ作成時に設定される文字コード->create database XXX character set utf8mb4となる？
->その通り
★character_set_system...システムの使用する文字セット。->システムとは？
->これについては聞くの忘れた。

->細かい変数の意味は実はエンジニアもあまり詳しくない。日本語対応させるなら、filesystemとdir以外はすべてutf8にすると覚えておくとよい。

2.session_regenerate_idは格納する直前の方が確実ですー＞その理由が分からない。

3.エラーハンドリングでユーザーに対して表示するメッセージについてPHP/MYSQL原則以下２種があると考えて良いですか。
1).try catchで$errorのほうに入ってしまった場合->データベースエラーです。しばらくしてからやり直してください。
2).クエリが正常に実行されたとして、その戻り値($stmt->fetch(PDO::FETCH_ASSOC)の戻り値)により分岐する。
->データが登録されていません。など

->この流れでOK。

以上はユーザーに表示するエラーメッセージですが、開発側がさらにエラー原因を細かく分析するために
する処理はありますか？error_logで表示するべき処理はどんな処理ですか？
->バグが出やすいとこにerror_logを書く。詳細はエンジニアによる。

4.通常ログイン後のセッションに入れておく情報は以下の４つですか？
1)ユーザーＩＤ
2)ユーザー名やＥｍａｉｌの一部などなどヘッダーに常に表示するユーザー情報
3)最終ログイン日時
4)ログインが有効な期間（１時間とか１ヵ月）
->OK

5.データベースから一度にうまくデータが取れないとき、
２回にわたりアクセスしてその結果セットを
加工するのはアリか？
->１度で取ってくるのがベスト

6.サニタイズやバリデーションについて。htmlspecialcharsをブラウザで
表示直前に実行することは分かる。
分かるが、ＰＯＳＴ送信で送られてきたデータを字数や同値チェック、するのも
分かる。でも、普通に送信されたテキストなどの有害コード< /などはじくバリデーションも
必要だと思うが、必要なの？
->・テキストやサンプルコードでは書かれていないが、ＤＢに入れる前には字数制限などのバリデーションのほかに
有害なコードを産む特殊文字を弾くバリデーションが必要となる。
・環境依存文字もバリデーションではじく必要あり。

・顧客は基本設計書はみるが、詳細設計書はみない。
・詳細設計書は、常に最新にアップデートする必要あり。
・特に、データベース定義書は重要。メンテナンス必要。

